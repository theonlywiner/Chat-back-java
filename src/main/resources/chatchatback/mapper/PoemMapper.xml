<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="chatchatback.mapper.PoemMapper">

    <!-- 定义自定义结果映射 -->
    <resultMap id="PoemResultMap" type="chatchatback.pojo.entity.Poem">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="dynastyId" column="dynasty_id"/>
        <result property="authorId" column="author_id"/>
        <result property="fullAncientContent" column="full_ancient_content"/>
        <result property="fullModernContent" column="full_modern_content"/>
        <result property="annotation" column="annotation"/>
        <result property="appreciation" column="appreciation"/>
        <result property="background" column="background"/>
        <result property="peopleAppreciation" column="people_appreciation"/>
        <!-- 关键配置：指定类型处理器 -->
        <result
                property="links"
                column="links"
                typeHandler="chatchatback.handler.JsonListTypeHandler"/>
    </resultMap>

    <!-- 修改查询使用 resultMap -->
    <select id="getPoemsByGradeId" resultMap="PoemResultMap">
        SELECT
        p.id,
        p.name,
        p.dynasty_id,
        p.author_id,
        p.full_ancient_content,
        p.full_modern_content,
        p.links,
        ap.name as author,
        dy.name as dynasty
        FROM poems p
        LEFT JOIN authors_poems ap on p.author_id = ap.id
        LEFT JOIN dynasty dy on p.dynasty_id = dy.id
        INNER JOIN poem_textbook pt ON pt.poem_id = p.id
        where pt.grade_id = #{gradeId}
        <if test="name != null and name != ''">
            AND p.name LIKE CONCAT('%', #{name}, '%')
        </if>
        ORDER BY p.id ASC
    </select>

    <select id="getPoemById" resultMap="PoemResultMap">
        SELECT
            p.id,
            p.name,
            p.dynasty_id,
            p.author_id,
            p.full_ancient_content,
            p.full_modern_content,
            p.annotation,
            p.appreciation,
            p.background,
            p.people_appreciation,
            p.links,
            ap.name as author,
            dy.name as dynasty
        FROM poems p
                 LEFT JOIN authors_poems ap on p.author_id = ap.id
                 LEFT JOIN dynasty dy on p.dynasty_id = dy.id
        where p.id = #{id}
    </select>

    <select id="getAllPoems" resultMap="PoemResultMap">
        SELECT
            p.id,
            p.name,
            p.dynasty_id,
            dy.name as dynasty,
            p.author_id,
            ap.name AS author, -- 联表获取作者名
            p.full_ancient_content,
            p.full_modern_content
        FROM poems p
                 INNER JOIN authors_poems ap ON p.author_id = ap.id
                 LEFT JOIN dynasty dy on p.dynasty_id = dy.id
        WHERE p.id >= #{lastId}
        <if test="name != null">
            AND p.name LIKE CONCAT('%', #{name}, '%')
        </if>
        ORDER BY p.id ASC
        LIMIT #{pageSize}
    </select>

    <!-- 根据条件查找分页起始ID -->
    <select id="findOffsetId" resultType="java.lang.Long">
        SELECT p.id
        FROM poems p
        <include refid="queryConditions"/>
        ORDER BY p.id ASC
        LIMIT 1 OFFSET #{offset}
    </select>

    <!-- 总数统计优化 -->
    <select id="countAllPoems" resultType="java.lang.Long">
        SELECT COUNT(DISTINCT p.id)
        FROM poems p
        <include refid="queryConditions"/>
    </select>

    <select id="getPoemNameByIds" resultType="chatchatback.pojo.entity.PoemListVO">
        SELECT p.id, p.name
        FROM poems p
        WHERE p.id IN
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="searchByKeyword" resultType="chatchatback.pojo.entity.PoemListVO">
        select
            p.id,
            p.name,
            p.dynasty_id,
            p.author_id,
            p.full_ancient_content,
            p.full_modern_content,
            ap.name AS author,
            dp.name as dynasty
        FROM poems p
                 LEFT JOIN authors_poems ap on p.author_id = ap.id
                 LEFT JOIN dynasty dp on p.dynasty_id = dp.id
        WHERE p.id >= #{lastId}
        <if test="keyword != null and keyword != ''">
            AND p.full_ancient_content LIKE CONCAT('%',#{keyword},'%')
        </if>
        <if test="dynastyId != null and dynastyId > 0">
            AND p.dynasty_id = #{dynastyId}
        </if>
        order by p.id
        LIMIT #{pageSize}
    </select>

    <select id="SearchCountByKeyword" resultType="chatchatback.pojo.vo.CountKeywordVO">
        SELECT
            tmp.dynasty_id as dynasty_id,
            dy.name AS dynasty,
            COUNT(dynasty_id) AS count
        FROM (
                 SELECT dynasty_id
                 FROM poems
                 <where>
                     <if test="keyword != null and keyword != ''">
                         AND full_ancient_content LIKE CONCAT('%', #{keyword}, '%')
                     </if>
                 </where>
             ) AS tmp
            LEFT JOIN dynasty dy on tmp.dynasty_id = dy.id
        GROUP BY tmp.dynasty_id, dy.name
        ORDER BY count DESC;
    </select>

    <!-- 通用查询条件 -->
    <sql id="queryConditions">
        <if test="gradeId != null and gradeId != 0">
            INNER JOIN poem_textbook pt ON pt.poem_id = p.id AND pt.grade_id = #{gradeId}
        </if>
        <where>
            <if test="name != null and name != ''">
                AND p.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="keyword != null and keyword != ''">
                AND p.full_ancient_content LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="dynastyId != null and dynastyId > 0">
                AND p.dynasty_id = #{dynastyId}
            </if>
        </where>
    </sql>
</mapper>